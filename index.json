[{"categories":["linux"],"content":"Makefile shell 中绝对路径的正确处理","date":"2022-03-12","objectID":"/makefile-shell-path-get/","tags":["shell","linux"],"title":"Makefile shell 中绝对路径的正确处理","uri":"/makefile-shell-path-get/"},{"categories":["linux"],"content":"Makefile 与 shell(主要是 Bash) 中绝对路径的处理。 版权声明：本文为博主 xwi88 的原创文章，遵循 CC BY-NC 4.0 版权协议，禁止商用，转载请注明出处，欢迎关注 https://github.com/xwi88 ","date":"2022-03-12","objectID":"/makefile-shell-path-get/:0:0","tags":["shell","linux"],"title":"Makefile shell 中绝对路径的正确处理","uri":"/makefile-shell-path-get/"},{"categories":["linux"],"content":"Makefile make version: 3.81 BASEDIR = $(dir $(realpath $(firstword $(MAKEFILE_LIST)))) GNU Make 3.81 Copyright (C) 2006 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. This program built for i386-apple-darwin11.3.0 ","date":"2022-03-12","objectID":"/makefile-shell-path-get/:1:0","tags":["shell","linux"],"title":"Makefile shell 中绝对路径的正确处理","uri":"/makefile-shell-path-get/"},{"categories":["linux"],"content":"Linux Shell Bash version: 5.1 DIR=$(cd $(dirname $0) \u0026\u0026 pwd) DIR=$(cd $(dirname $0); pwd) DIR=$(cd dirname $0; pwd) DIR=$(cd $(dirname \"${BASH_SOURCE[0]}\") \u0026\u0026 pwd) ROOT_DIR=\"${DIR##*/}\" FILE_NAME=$(basename \"$0\") 警告 BASH_SOURCE 只适用于有 bash 环境 cat /etc/shells 本机支持 shell 查看 ","date":"2022-03-12","objectID":"/makefile-shell-path-get/:2:0","tags":["shell","linux"],"title":"Makefile shell 中绝对路径的正确处理","uri":"/makefile-shell-path-get/"},{"categories":["linux"],"content":"实例 以上使用实例请参考: docker-compose-resources Makefile docker-build.sh ","date":"2022-03-12","objectID":"/makefile-shell-path-get/:3:0","tags":["shell","linux"],"title":"Makefile shell 中绝对路径的正确处理","uri":"/makefile-shell-path-get/"},{"categories":["docker"],"content":"MacOS 上使用 minikube 替换 Docker Desktop","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"Docker 公司于 2021-08-31 宣布 Docker Desktop 对大型组织来说将不再是一个免费产品。为此我们需要寻找一个可以方便替换 Docker Desktop 且对我们工作影响较小的工具，如 minikube，Hyperkit，podman。 版权声明：本文为博主 xwi88 的原创文章，遵循 CC BY-NC 4.0 版权协议，禁止商用，转载请注明出处，欢迎关注 https://github.com/xwi88 ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:0:0","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"术语说明 Docker Inc 一家总部设在美国的公司，开发了一些开源和非开源软件，这让开发、测试和在容器中运行应用更容易。 Docker Engine Docker 背后的核心技术。它是一个作为守护进程运行在 Linux 上的开源软件，使在 Linux 内核上运行容器成为可能。它负责容器的生命周期和容器可以访问的物理资源(计算、内存、存储)的隔离。这个引擎可以在物理或者虚拟机上运行，但是它只能在 Linux 内核上运行，也就是说，在任何 Linux 风格的操作系统上。理解这一点很重要。Docker 引擎只能在 Linux 上运行。 Docker CLI CLI 通常被开发人员用来与 docker 引擎交互。这包括 docker 和 docker-compose 命令。再次强调，这是一款开源软件。 Docker Desktop 由于 Docker Engine 只能在 Linux 上运行，使用 Windows 和 macOS 进行软件开发的开发人员只有在启动运行 Linux 的虚拟机(VM)之后才能运行该引擎。这就是 Docker Desktop 的用武之地。Docker Desktop 是一个专有软件，它允许 Windows/macOS 开发者在开发环境中无缝地使用容器技术，而无需管理操作 VM 的复杂性和随之而来的所有细节(网络、虚拟化、 linux 知识等)。Docker Desktop 是为了在软件开发过程中使用而设计的，它在类似于生产环境的容器中不起作用，在这种环境中只有 Docker Engine 参与。 技巧 继续在 macOS 上运行和构建容器应用程序的方法是在 Linux VM 上运行 Docker Engine。 ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:1:0","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"Docker Desktop 清理 不建议直接在 Docker Desktop 或其他类似环境上运行 minikube Uninstall Docker Desktop by removing /Applications/Docker.app。 ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:2:0","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"minikube ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:3:0","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"环境要求 最少 2核 最少 2GB 可用内存 最少 20GB 可用磁盘空间 网络连接 容器或虚拟机管理器, 如: Docker, Hyperkit, Hyper-V, KVM, Parallels, podman, VirtualBox, or VMware Fusion/Workstation ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:3:1","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"安装 示例 推荐 Homebrew 方式安装 brew install docker brew install docker-compose # 根据需要，可选安装 brew install hyperkit brew install minikube 技巧 如果通过 brew 安装 minikube 失败，可以尝试手动安装 curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64 sudo install minikube-darwin-amd64 /usr/local/bin/minikube ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:3:2","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"检查安装 执行 which minikube 警告 brew 方式安装后执行 which minikube，如果失败可执行以下命令 brew unlink minikube brew link minikube remove the old minikube links and link the newly installed binary ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:3:3","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"启动 minikube start # Tell Docker CLI to talk to minikube's VM eval $(minikube docker-env) # Save IP to a hostname # echo \"`minikube ip` docker.local\" | sudo tee -a /etc/hosts \u003e /dev/null # control panel, must start minikube with cluster model, without flag --no-kubernetes minikube dashboard # test docker run hello-world ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:4:0","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"高级启动 commands start ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:5:0","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"启动命令 示例 minikube start minikube start --no-kubernetes --driver=docker --cpus=2 --memory=1800mb --image-mirror-country='auto' minikube start --no-kubernetes --driver=docker --cpus=2 --memory=1800mb --image-mirror-country='cn' minikube start --no-kubernetes --driver=docker --cpus=2 --memory=1800mb --insecure-registry=https://docker.mirrors.ustc.edu.cn,https://reg-mirror.qiniu.com,https://mirror.ccs.tencentyun.com 推荐使用类似配置，后续不用进入环境修改相关配置了 minikube start --driver=docker --cpus=2 --memory=1800mb --insecure-registry=https://docker.mirrors.ustc.edu.cn,https://reg-mirror.qiniu.com,https://mirror.ccs.tencentyun.com 如果要使用 minikube dashboard，可这样启动 ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:5:1","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"可能出现的问题 警告 我们这里仅提供演示，没有卸载掉 Docker Desktop，直接使用了它安装的docker及其配置。由于资源限制导致无法满足正常启动 minikube 出现了下面的提示 😄 minikube v1.24.0 on Darwin 12.2.1 ✨ Using the docker driver based on existing profile ⛔ Docker Desktop only has 1986MiB available, you may encounter application deployment failures. 💡 Suggestion: 1. Click on \"Docker for Desktop\" menu icon 2. Click \"Preferences\" 3. Click \"Resources\" 4. Increase \"Memory\" slider bar to 2.25 GB or higher 5. Click \"Apply \u0026 Restart\" 📘 Documentation: https://docs.docker.com/docker-for-mac/#resources ❗ You cannot change the memory size for an existing minikube cluster. Please first delete the cluster. 👍 Starting minikube without Kubernetes minikube in cluster minikube minikube delete 调整 docker 资源后，删除重建，重新启动即可 🔥 Deleting \"minikube\" in docker ... 🔥 Removing ~/.minikube/machines/minikube ... 💀 Removed all traces of the \"minikube\" cluster. ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:5:2","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"启动后环境检查 如果需要使用 dashboard，请不要在启动参数添加 --no-kubernetes 示例 minikube start --no-kubernetes --driver=docker --cpus=2 --memory=1800mb --insecure-registry=https://docker.mirrors.ustc.edu.cn,https://reg-mirror.qiniu.com,https://mirror.ccs.tencentyun.com 😄 minikube v1.24.0 on Darwin 12.2.1 ✨ Using the docker driver based on user configuration ⛔ Docker Desktop only has 4180MiB available, you may encounter application deployment failures. 💡 Suggestion: 1. Click on \"Docker for Desktop\" menu icon 2. Click \"Preferences\" 3. Click \"Resources\" 4. Increase \"Memory\" slider bar to 2.25 GB or higher 5. Click \"Apply \u0026 Restart\" 📘 Documentation: https://docs.docker.com/docker-for-mac/#resources 👍 Starting minikube without Kubernetes minikube in cluster minikube 🚜 Pulling base image ... ❗ minikube was unable to download gcr.io/k8s-minikube/kicbase:v0.0.28, but successfully downloaded docker.io/kicbase/stable:v0.0.28 as a fallback image 🔥 Creating docker container (CPUs=2, Memory=1800MB) ... 🏄 Done! minikube is ready without Kubernetes! ╭───────────────────────────────────────────────────────────────────────────────────────╮ │ │ │ 💡 Things to try without Kubernetes ... │ │ │ │ - \"minikube ssh\" to SSH into minikube's node. │ │ - \"minikube docker-env\" to point your docker-cli to the docker inside minikube. │ │ - \"minikube image\" to build images without docker. │ │ │ ╰───────────────────────────────────────────────────────────────────────────────────────╯ eval $(minikube docker-env) 让 Docker CLI 与 minikube’s VM 交互 技巧 Add this line to .bash_profile or .zshrc or … if you want to use minikube’s daemon by default (or if you do not want to set this every time you open a new terminal). docker info 查看我们现在终端的 docker 信息 Kernel Version: 5.10.76-linuxkit Operating System: Ubuntu 20.04.2 LTS OSType: linux Architecture: x86_64 CPUs: 3 Total Memory: 4.083GiB Name: minikube No Proxy: control-plane.minikube.internal Registry: https://index.docker.io/v1/ Labels: provider=docker Experimental: false Insecure Registries: docker.mirrors.ustc.edu.cn mirror.ccs.tencentyun.com reg-mirror.qiniu.com 10.96.0.0/12 127.0.0.0/8 Live Restore Enabled: false 新打开一个终端查看本机 docker info Kernel Version: 5.10.76-linuxkit Operating System: Docker Desktop OSType: linux Architecture: x86_64 CPUs: 3 Total Memory: 4.083GiB Name: docker-desktop HTTP Proxy: http.docker.internal:3128 HTTPS Proxy: http.docker.internal:3128 Registry: https://index.docker.io/v1/ Labels: Experimental: false Insecure Registries: 127.0.0.0/8 Registry Mirrors: https://registry-1.docker.io/ https://hub-mirror.c.163.com/ https://mirror.baidubce.com/ https://registry.cn-hangzhou.aliyuncs.com/ https://docker.mirrors.ustc.edu.cn/ https://mirror.ccs.tencentyun.com/ https://registry.docker-cn.com/ https://reg-mirror.qiniu.com/ https://dockerhub.azk8s.cn/ ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:5:3","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"镜像源修改 不建议进入 minikube 环境做此修改，建议在启动时指定参数进行配置: minikube start --image-mirror-country='cn' 等参数， 详见 minikube start 或 高级启动 示例 minikube ssh 连入 minikube node sudo mkdir -p /etc/docker 创建 docker 目录 vi /etc/docker/daemon.json 修改配置 daemon.json daemon.json 配置 { \"registry-mirrors\": [ \"https://registry-1.docker.io\", \"https://hub-mirror.c.163.com\", \"https://mirror.baidubce.com\", \"https://registry.cn-hangzhou.aliyuncs.com\", \"http://f1361db2.m.daocloud.io\", \"https://docker.mirrors.ustc.edu.cn\", \"https://mirror.ccs.tencentyun.com\", \"https://registry.docker-cn.com\", \"https://reg-mirror.qiniu.com\", \"https://dockerhub.azk8s.cn\" ] } sudo systemctl daemon-reload sudo systemctl restart docker ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:6:0","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"Dashboard minikube dashboard 示例 minikube start --driver=docker --cpus=2 --memory=1800mb --insecure-registry=https://docker.mirrors.ustc.edu.cn,https://reg-mirror.qiniu.com,https://mirror.ccs.tencentyun.com 😄 minikube v1.24.0 on Darwin 12.2.1 ▪ MINIKUBE_ACTIVE_DOCKERD=minikube ✨ Using the docker driver based on user configuration ⛔ Docker Desktop only has 4180MiB available, you may encounter application deployment failures. 💡 Suggestion: 1. Click on \"Docker for Desktop\" menu icon 2. Click \"Preferences\" 3. Click \"Resources\" 4. Increase \"Memory\" slider bar to 2.25 GB or higher 5. Click \"Apply \u0026 Restart\" 📘 Documentation: https://docs.docker.com/docker-for-mac/#resources 👍 Starting control plane node minikube in cluster minikube 🚜 Pulling base image ... 💾 Downloading Kubernetes v1.22.3 preload ... \u003e preloaded-images-k8s-v13-v1...: 501.73 MiB / 501.73 MiB 100.00% 21.11 Mi ❗ minikube was unable to download gcr.io/k8s-minikube/kicbase:v0.0.28, but successfully downloaded docker.io/kicbase/stable:v0.0.28 as a fallback image 🔥 Creating docker container (CPUs=2, Memory=1800MB) ... ❗ This container is having trouble accessing https://k8s.gcr.io 💡 To pull new external images, you may need to configure a proxy: https://minikube.sigs.k8s.io/docs/reference/networking/proxy/ 🐳 Preparing Kubernetes v1.22.3 on Docker 20.10.8 ... ▪ Generating certificates and keys ... ▪ Booting up control plane ... ▪ Configuring RBAC rules ... 🔎 Verifying Kubernetes components... ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5 🌟 Enabled addons: storage-provisioner, default-storageclass 🏄 Done! kubectl is now configured to use \"minikube\" cluster and \"default\" namespace by default minikube dashboard 🔌 Enabling dashboard ... ▪ Using image kubernetesui/metrics-scraper:v1.0.7 ▪ Using image kubernetesui/dashboard:v2.3.1 🤔 Verifying dashboard health ... 🚀 Launching proxy ... 🤔 Verifying proxy health ... 🎉 Opening http://127.0.0.1:51816/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/ in your default browser... ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:7:0","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"更多 Using minikube as Docker Desktop Replacement How to interact with registries minikube-image-build containerd ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:8:0","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["docker"],"content":"参考 run-docker-without-docker-desktop-on-macos minikube docs ","date":"2022-03-11","objectID":"/mac-minikube-replace-docker-desktop/:9:0","tags":["docker","k8s","env"],"title":"Mac 使用 minikube 替换 Docker Desktop","uri":"/mac-minikube-replace-docker-desktop/"},{"categories":["git"],"content":"我的常用 git 命令及配置","date":"2022-03-10","objectID":"/git-common-config/","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"分享一下这些年我常用的 git [gɪt] 配置。以下内容基于当前版本 2.34.1，如出现不一致可先升级自己的版本！ 版权声明：本文为博主 xwi88 的原创文章，遵循 CC BY-NC 4.0 版权协议，禁止商用，转载请注明出处，欢迎关注 https://github.com/xwi88 ","date":"2022-03-10","objectID":"/git-common-config/:0:0","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"账户基本配置 --global 表示全局配置，非全局配置需要在具体 git 项目目录下面设置 git config --global user.name [your_name] git config --global user.email [your_email] git config --global --list 全局 git 配置查看 git config --list 项目 git 配置查看 ","date":"2022-03-10","objectID":"/git-common-config/:1:0","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"签名提交设置 configure your Git client to sign commits by default for a local repository, in Git versions 2.0.0 and above git config --global user.signingkey [KeyID] git config --global commit.gpgsign true 可参考: Git 使用 GPG 对提交进行签名认证 进行设置 ","date":"2022-03-10","objectID":"/git-common-config/:1:1","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"密码存储 为了避免每次都要输入密码，我们需要让机器记住密码。MacOS 会借助 keychain Access 存储你的密码及其他凭证。 git config --global credential.helper store 设置本机永久保存你的密码或凭证 git config --global credential.helper 'cache --timeout=300' 保存密码 300s 更多内容见: gitcredentials git-credential-cache 警告 如果你开启了多因素认证，则需要使用 Personal Token 之类的代替密码输入。 github 设置路径: Settings Developer settings-\u003ePersonal access tokens-\u003eGenerate new token Personal access tokens 📢 只有生成的时候可见，注意保存 务必注意权限及过期时间设置 ","date":"2022-03-10","objectID":"/git-common-config/:2:0","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"密码清除 密码改变或过期后请务必清除存储的密码，否则可能造成登录失败，无权限登录等问题 git config --system --unset credential.helper git config --global credential.helper 'cache --timeout=5' 或设置一个极短的过期时间，清除缓存密码 git config --global credential.helper store 重新开启密码存储 ","date":"2022-03-10","objectID":"/git-common-config/:3:0","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"日志输出美化 原始的 git log 太过简陋不方便查看更具体的信息，我们需要对其进行格式化，借助 git alias 可以很方便的定义我们自己的 git log 命令，请务必不要覆盖掉 git 自带的命令。 技巧 我常用的 git log 配置如下 git config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)\u003c%an\u003e%Creset | %C(red)%cs%Creset' --abbrev-commit\" git lg -4 * 16074ef - (HEAD -\u003e main, origin/main) update posts git-sign-tag-commit-with-gpg (2 hours ago) \u003cxwi88\u003e | 2022-03-10 * e39e092 - support l2d widget (23 hours ago) \u003cxwi88\u003e | 2022-03-10 * 11605af - close cookie tip and update posts (24 hours ago) \u003cxwi88\u003e | 2022-03-09 * 9b548b6 - update posts git sign with gpg (25 hours ago) \u003cxwi88\u003e | 2022-03-09 如果你需要查看 gpg 签名信息可以如下配置: git config --global alias.lsg \"log --color --graph --pretty=format:'%C(cyan)%G?%Creset %Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)\u003c%an\u003e%Creset | %C(red)%cs%Creset' --abbrev-commit\" git lsg -4 * G 16074ef - (HEAD -\u003e main, origin/main) update posts git-sign-tag-commit-with-gpg (2 hours ago) \u003cxwi88\u003e | 2022-03-10 * G e39e092 - support l2d widget (23 hours ago) \u003cxwi88\u003e | 2022-03-10 * G 11605af - close cookie tip and update posts (24 hours ago) \u003cxwi88\u003e | 2022-03-09 * G 9b548b6 - update posts git sign with gpg (25 hours ago) \u003cxwi88\u003e | 2022-03-09 更详细签名信息可如下配置： git config --global alias.llsg \"log --color --graph --pretty=format:'%C(cyan)%G?%Creset %Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)\u003c%an\u003e%Creset | %C(red)%cs%Creset [%GK trust:%GT] %C(yellow)%GS%Creset' --abbrev-commit\" git llsg -4 * G 16074ef - (HEAD -\u003e main, origin/main) update posts git-sign-tag-commit-with-gpg (2 hours ago) \u003cxwi88\u003e | 2022-03-10 [C739E6A64E102CD0 trust:ultimate] xwi88 \u003c278810732@qq.com\u003e * G e39e092 - support l2d widget (23 hours ago) \u003cxwi88\u003e | 2022-03-10 [90684042688CB9BE trust:ultimate] xwi88 \u003c278810732@qq.com\u003e * G 11605af - close cookie tip and update posts (24 hours ago) \u003cxwi88\u003e | 2022-03-09 [90684042688CB9BE trust:ultimate] xwi88 \u003c278810732@qq.com\u003e * G 9b548b6 - update posts git sign with gpg (25 hours ago) \u003cxwi88\u003e | 2022-03-09 [90684042688CB9BE trust:ultimate] xwi88 \u003c278810732@qq.com\u003e 警告 务必指定输出日志条数 务必不要配置的过于复杂，可能会导致输出较慢 如果使用 gpg 签名，务必保证你不要有太多个 gpg key ","date":"2022-03-10","objectID":"/git-common-config/:4:0","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"基本命令 关于命令更多细节，可通过 git \u003ccommand\u003e --help 查看 git add [\u003cpath_spec\u003e...] 添加文件到 Index git add [\u003cpath_spec\u003e...] -n 显示命令执行后结果，不真正执行 git status -s 当前分支状态查看，显示文件在工作目录与暂存区不同状态：修改，未添加 Index，暂存但未提交 git diff git diff [\u003cpath\u003e...] 比较工作目录文件和暂存区文件差异 git diff \u003ccommit\u003e...\u003ccommit\u003e [\u003cpath\u003e...] 比较 commits 之间差异 git diff --cached [\u003ccommit\u003e] [\u003cpath\u003e...] 比较暂存区和版本库差异 git commit 暂存区变动提交到本地仓库 git commit -m \u003cmessage\u003e 提交到本地仓库 git commit -S -m \u003cmessage\u003e 签名并提交到本地仓库，需要配置你的签名 GPG key git commit -a -m 添加并提交全部变动到本地仓库，跳过了 git add，一般请勿执行此操作 git commit --amend 重新提交最近的提交，用于最近提交的提交日志信息修改或变动追加，请勿连续此操作，已推送远程仓库提交请避免此操作 git reset 变更撤销，具体见 checkout 与 reset git rm 从暂存区和工作目录删除文件 git mv \u003cold\u003e \u003cnew\u003e 文件的重定向，相当于：mv old new , git add 新文件 和 git rm 旧文件 ","date":"2022-03-10","objectID":"/git-common-config/:5:0","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"分支操作 ","date":"2022-03-10","objectID":"/git-common-config/:6:0","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"远程分支地址设置 git remote -v git remote add \u003cname\u003e \u003curl\u003e 远程仓库地址配置 git remote rename \u003cold\u003e \u003cnew\u003e 远程仓库地址名修改 git remote set-url \u003cname\u003e \u003cnew_url\u003e 远程仓库地址修改 ","date":"2022-03-10","objectID":"/git-common-config/:6:1","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"代码下载 clone git clone -b branch_name --single-branch \u003curl\u003e 单分支下载 git clone \u003curl\u003e [dir] ","date":"2022-03-10","objectID":"/git-common-config/:6:2","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"代码拉取与同步 git fetch --all || git merge 仅拉取代码到本地远程分支 如 origin/main, upstream/main 等，不直接合并到相应本地分支，在需要时同步合并 git pull 拉取并合并远程分支代码到当前分支，一般情况不建议直接此操作，除非你很明确可能产生的后果 git push -u \u003crepo_name\u003e \u003cbranch_name\u003e 主要用于本地新建分支与指定远程分支间的跟踪，一般用于新分支首次推送 ","date":"2022-03-10","objectID":"/git-common-config/:6:3","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"checkout 与 reset git chekout git reset git revert cli 不常用 Git Command Scope Common use cases reset Commit Discard commits in a private branch or throw away uncommited changes reset File Unstage a file checkout Commit Switch between branches or inspect old snapshots checkout File Discard changes in the working directory revert Commit Undo commits in a public branch revert File (N/A) 信息 --soft The staged snapshot and working directory are not altered in any way. --mixed The staged snapshot is updated to match the specified commit, but the working directory is not affected. This is the default option. --hard The staged snapshot and the working directory are both updated to match the specified commit. ","date":"2022-03-10","objectID":"/git-common-config/:6:4","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"代码合并提交 多人或大规模团队协作情况下，请务必掌握并使用 git rebase 进行操作，且要保证各自分支相比 base 分支有最小的 commits 数量，便于各自 rebase 及冲突解决。 如果你提交了 PR 或 MR，reviewers 审查前，请务必保证你提交的分支相较 base 是 Fast-Forward 的，禁止在界面直接进行 Rebase git rebase 慎重操作 演示，请点击 git merge 不建议此操作 ","date":"2022-03-10","objectID":"/git-common-config/:6:5","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"分支推送与删除 git push 当前分支推送，需要与远程分支建立追踪；首次推送，请使用 git push -u \u003cname\u003e \u003cbranch\u003e git push -f 强制推送当前分支到对应远程仓库 git push -f \u003cname\u003e :\u003cremote_branch\u003e 推送空分支到远程仓库，即删除远程仓库对应分支 git branch -d 本地分支删除 ","date":"2022-03-10","objectID":"/git-common-config/:6:6","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"撤销设置项 Remove the line matching the key from config file. git config --global --unset [key] 全局配置中删除 git config --unset [key] 项目配置中删除 示例 全局配种中删除误操作创建项 git config --global --unset alias.llg ","date":"2022-03-10","objectID":"/git-common-config/:7:0","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"配置文件编辑 git config --global -e 全局配置文件编辑，文件位置: ~/.gitconfig git config -e 项目配置文件编辑，文件位置: .git/config ","date":"2022-03-10","objectID":"/git-common-config/:8:0","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"参考 git docs Git-Basics-Git-Aliases Git-Commands-Basic-Snapshotting Git 使用 GPG 对提交进行签名认证 ","date":"2022-03-10","objectID":"/git-common-config/:9:0","tags":["git","env"],"title":"Git 常用命令及配置","uri":"/git-common-config/"},{"categories":["git"],"content":"使用 gpg 对 git 的 tags 或 commits 进行签名及 gpg key 的更新、续期、过期问题处理","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"使用 GPG 或 S/MIME，可以在本地对 tag 或 commit 进行签名。这些 tag 或 commit 在 GitHub 上被标记为可信的，这样其他人就可以确信这些更改来自一个可信的来源。 版权声明：本文为博主 xwi88 的原创文章，遵循 CC BY-NC 4.0 版权协议，禁止商用，转载请注明出处，欢迎关注 https://github.com/xwi88 ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:0:0","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"开启 vigilant 模式 开启 vigilant 警惕模式后，属于你的未签名提交将被标记为 Unverified 标记。这可以提醒你和其他人关于真实性的潜在问题。Git 提交的作者和提交者很容易被欺骗。例如，有人可以推送一个声明是你的提交，但实际上不是。 设置路径: Settings-\u003eSSH and GPG keys\u003eVigilant mode-\u003eselect Flag unsigned commits as unverified ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:1:0","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"GPG Command ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:2:0","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"man gpg gpg (GnuPG) 2.2.34 libgcrypt 1.9.4 Copyright (C) 2022 g10 Code GmbH License GNU GPL-3.0-or-later \u003chttps://gnu.org/licenses/gpl.html\u003e This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Home: ~/.gnupg Supported algorithms: Pubkey: RSA, ELG, DSA, ECDH, ECDSA, EDDSA Cipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH, CAMELLIA128, CAMELLIA192, CAMELLIA256 Hash: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224 Compression: Uncompressed, ZIP, ZLIB, BZIP2 Syntax: gpg [options] [files] Sign, check, encrypt or decrypt Default operation depends on the input data Commands: -s, --sign make a signature --clear-sign make a clear text signature -b, --detach-sign make a detached signature -e, --encrypt encrypt data -c, --symmetric encryption only with symmetric cipher -d, --decrypt decrypt data (default) --verify verify a signature -k, --list-keys list keys --list-signatures list keys and signatures --check-signatures list and check key signatures --fingerprint list keys and fingerprints -K, --list-secret-keys list secret keys --generate-key generate a new key pair --quick-generate-key quickly generate a new key pair --quick-add-uid quickly add a new user-id --quick-revoke-uid quickly revoke a user-id --quick-set-expire quickly set a new expiration date --full-generate-key full featured key pair generation --generate-revocation generate a revocation certificate --delete-keys remove keys from the public keyring --delete-secret-keys remove keys from the secret keyring --quick-sign-key quickly sign a key --quick-lsign-key quickly sign a key locally --quick-revoke-sig quickly revoke a key signature --sign-key sign a key --lsign-key sign a key locally --edit-key sign or edit a key --change-passphrase change a passphrase --export export keys --send-keys export keys to a keyserver --receive-keys import keys from a keyserver --search-keys search for keys on a keyserver --refresh-keys update all keys from a keyserver --import import/merge keys --card-status print the card status --edit-card change data on a card --change-pin change a card's PIN --update-trustdb update the trust database --print-md print message digests --server run in server mode --tofu-policy VALUE set the TOFU policy for a key Options controlling the diagnostic output: -v, --verbose verbose -q, --quiet be somewhat more quiet --options FILE read options from FILE --log-file FILE write server mode logs to FILE Options controlling the configuration: --default-key NAME use NAME as default secret key --encrypt-to NAME encrypt to user ID NAME as well --group SPEC set up email aliases --openpgp use strict OpenPGP behavior -n, --dry-run do not make any changes -i, --interactive prompt before overwriting Options controlling the output: -a, --armor create ascii armored output -o, --output FILE write output to FILE --textmode use canonical text mode -z N set compress level to N (0 disables) Options controlling key import and export: --auto-key-locate MECHANISMS use MECHANISMS to locate keys by mail address --disable-dirmngr disable all access to the dirmngr Options to specify keys: -r, --recipient USER-ID encrypt for USER-ID -u, --local-user USER-ID use USER-ID to sign or decrypt (See the man page for a complete listing of all commands and options) Examples: -se -r Bob [file] sign and encrypt for user Bob --clear-sign [file] make a clear text signature --detach-sign [file] make a detached signature --list-keys [names] show keys --fingerprint [names] show fingerprints Please report bugs to \u003chttps://bugs.gnupg.org\u003e. ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:2:1","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"gpg shell command gpg\u003e help quit quit this menu save save and quit help show this help fpr show key fingerprint grip show the keygrip list list key and user IDs uid select user ID N key select subkey N check check signatures sign sign selected user IDs [* see below for related commands] lsign sign selected user IDs locally tsign sign selected user IDs with a trust signature nrsign sign selected user IDs with a non-revocable signature deluid delete selected user IDs delkey delete selected subkeys delsig delete signatures from the selected user IDs pref list preferences (expert) showpref list preferences (verbose) trust change the ownertrust revsig revoke signatures on the selected user IDs enable enable key disable disable key showphoto show selected photo IDs clean compact unusable user IDs and remove unusable signatures from key minimize compact unusable user IDs and remove all signatures from key * The 'sign' command may be prefixed with an 'l' for local signatures (lsign), a 't' for trust signatures (tsign), an 'nr' for non-revocable signatures (nrsign), or any combination thereof (ltsign, tnrsign, etc.). ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:2:2","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"GPG Key 生成与配置 注意 GPG does not come installed by default on macOS or Windows. To install GPG command line tools, see GnuPG’s Download page. ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:3:0","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"已存在 GPG keys gpg --list-secret-keys --keyid-format=long 示例 ~/.gnupg/pubring.kbx ----------------------------------- sec rsa4096/325ACD1FD3B6AA80 2022-03-07 [SC] [expires: 2024-03-06] 1F11E9A019E23C53C11C8D4C325ACD1FD3B6AA80 uid [ultimate] xwi88 \u003c278810732@qq.com\u003e the GPG key ID: 325ACD1FD3B6AA80 ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:3:1","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"新生成 GPG key 如果当前已存在旧的 GPG key 可不必重新生成! gpg --default-new-key-algo rsa4096 --gen-key 技巧 github 支持的用于生成 gpg key 的算法 RSA ElGamal DSA ECDH ECDSA EdDSA 示例 gpg --default-new-key-algo rsa4096 --gen-key Real name: tmp_gpg Email address: 278810732@qq.com You selected this USER-ID: “tmp_gpg 278810732@qq.com” Change (N)ame, (E)mail, or (O)kay/(Q)uit? O We need to generate a lot of random bytes. It is a good idea to perform some other action (type on the keyboard, move the mouse, utilize the disks) during the prime generation; this gives the random number generator a better chance to gain enough entropy. Note that this key cannot be used for encryption. You may want to use the command “–edit-key” to generate a subkey for this purpose. pub rsa4096 2022-03-09 [SC] [expires: 2024-03-08] F09FC9FB34FA457ED2F7090AFE47519758053257 uid tmp_gpg \u003c278810732@qq.com\u003e ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:3:2","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"最新 GPG keys gpg --list-secret-keys --keyid-format=long ----------------------------------- sec rsa4096/325ACD1FD3B6AA80 2022-03-07 [SC] [expires: 2024-03-06] 1F11E9A019E23C53C11C8D4C325ACD1FD3B6AA80 uid [ultimate] xwi88 \u003c278810732@qq.com\u003e sec rsa4096/FE47519758053257 2022-03-09 [SC] [expires: 2024-03-08] F09FC9FB34FA457ED2F7090AFE47519758053257 uid [ultimate] tmp_gpg \u003c278810732@qq.com\u003e ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:3:3","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"导出 GPG key gpg --armor --export FE47519758053257 或 gpg -a -o --export FE47519758053257 -----BEGIN PGP PUBLIC KEY BLOCK----- xxxxxxxxxxxxxxx -----END PGP PUBLIC KEY BLOCK----- 导出 gpg public key 到指定位置: gpg --export --armor [uid] \u003e gpgkey.pub.asc 导出到文件 uid: keyID/name/email gpg --keyserver [keyserverAddress] --send-keys keyIDs 导出到指定 key server gpg --send-keys keyIDs 导出到默认 key server 导出到默认 key server 输出 output: gpg: sending key 90684042688CB9BE to hkps://keyserver.ubuntu.com ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:3:4","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"查找 GPG key keyIDs 可以为: name, keyID, email gpg --keyserver keyserverAddress --search-keys keyIDs gpg --search-keys keyIDs 默认 key server 查找 示例 gpg --search-keys xwi88 gpg: data source: https://162.213.33.8:443 (1) xwi88 \u003c278810732@qq.com\u003e 4096 bit RSA key 90684042688CB9BE, created: 2022-03-09 Keys 1-1 of 1 for \"xwi88\". Enter number(s), N)ext, or Q)uit \u003e q gpg --search-keys 90684042688CB9BE gpg: data source: https://162.213.33.8:443 (1) xwi88 \u003c278810732@qq.com\u003e 4096 bit RSA key 90684042688CB9BE, created: 2022-03-09 Keys 1-1 of 1 for \"90684042688CB9BE\". Enter number(s), N)ext, or Q)uit \u003e q gpg --search-keys 278810732@qq.com gpg: data source: https://162.213.33.8:443 (1) xwi88 \u003c278810732@qq.com\u003e 4096 bit RSA key 90684042688CB9BE, created: 2022-03-09 Keys 1-1 of 1 for \"278810732@qq.com\". Enter number(s), N)ext, or Q)uit \u003e y ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:3:5","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"导入 GPG key key server 导入 如果不指定地址则默认从 hkps://keyserver.ubuntu.com 导入, 地址可能会不同，此为本机输出 gpg --import [GPG public key] 文件导入 gpg --keyserver [keyserverAddress] --recv-keys keyIDs key server 导入 gpg --recv-keys keyIDs 默认 key server 导入 gpg --refresh-keys 从 key server 更新所有 keys 示例 gpg --recv-keys 90684042688CB9BE gpg: key 90684042688CB9BE: \"xwi88 \u003c278810732@qq.com\u003e\" not changed gpg: Total number processed: 1 gpg: unchanged: 1 ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:3:6","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"私钥备份导出与导入 主要用于: 个人多机共享 警告 私钥禁止上传 key server 请通过安全的方式备份存储私钥文件 私钥文件权限: 600 公钥文件权限: 644 私钥导出 gpg -a -o test_secKey.asc --export-secret-keys keyID 示例 gpg -K 本机私钥查看 gpg -a -o test_secKey.asc --export-secret-keys 1F11E9A019E23C53C11C8D4C325ACD1FD3B6AA80 私钥导出 私钥导入 gpg --import secKeyFile 示例 gpg --import test_secKey.asc 私钥导入，与公钥导入一样操作 gpg: key 325ACD1FD3B6AA80: \"xwi88 \u003c278810732@qq.com\u003e\" not changed gpg: Total number processed: 1 gpg: unchanged: 1 gpg -K 本机私钥查看 ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:3:7","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"秘钥回收 当重新生成秘钥对后，如果其他的秘钥对不再使用，需要立即发布秘钥回收证书，声明以前的公钥不再生效，防止被恶意使用。 gpg --output test_revoke.asc --gen-revoke keyID gpg --import test_revoke.asc 导入回收证书 gpg --send-keys keyID 发送回收证书到服务器，声明原 GPG Key 作废 示例 gpg --output test_revoke.asc --gen-revoke 325ACD1FD3B6AA80 或 gpg --output test_revoke.asc --generate-revocation 325ACD1FD3B6AA80 sec rsa4096/325ACD1FD3B6AA80 2022-03-07 xwi88 \u003c278810732@qq.com\u003e Create a revocation certificate for this key? (y/N) y Please select the reason for the revocation: 0 = No reason specified 1 = Key has been compromised 2 = Key is superseded 3 = Key is no longer used Q = Cancel (Probably you want to select 1 here) Your decision? 3 Enter an optional description; end it with an empty line: \u003e Reason for revocation: Key is no longer used (No description given) Is this okay? (y/N) y ASCII armored output forced. Revocation certificate created. Please move it to a medium which you can hide away; if Mallory gets access to this certificate he can use it to make your key unusable. It is smart to print this certificate and store it away, just in case your media become unreadable. But have some caution: The print system of your machine might store the data and make it available to others! gpg --import test_revoke.asc gpg: key 325ACD1FD3B6AA80: \"xwi88 \u003c278810732@qq.com\u003e\" revocation certificate imported gpg: Total number processed: 1 gpg: new key revocations: 1 gpg: marginals needed: 3 completes needed: 1 trust model: pgp gpg: depth: 0 valid: 3 signed: 0 trust: 0-, 0q, 0n, 0m, 0f, 3u gpg: next trustdb check due at 2024-03-06 gpg --send-keys 325ACD1FD3B6AA80 gpg --search-keys 325ACD1FD3B6AA80 gpg: data source: https://162.213.33.8:443 gpg: key \"325ACD1FD3B6AA80\" not found on keyserver gpg: keyserver search failed: Not found ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:3:8","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"秘钥删除 gpg --delete-secret-keys keyID 需要先删除 gpg --delete-keys keyID ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:3:9","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"重启 GPG Agent GPG会在需要时重新启动它 gpgconf --kill gpg-agent ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:4:0","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"Git 配置使用 GPG ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:5:0","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"设置 GPG key 复制你要使用的 GPG key, beginning with —–BEGIN PGP PUBLIC KEY BLOCK—– and ending with —–END PGP PUBLIC KEY BLOCK—– 粘贴到 github 相应位置: Settings-\u003eSSH and GPG keys-\u003eGPG keys，如已经存在相应 key 可忽略，不存在新建后粘贴即可! ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:5:1","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"配置 sign 使用的 GPG key 注意你是否需要全局配置，如果进行了全局配置，单个项目也可重新配置! local 替换 –global # global config git config --global user.signingkey 325ACD1FD3B6AA80 # configure your Git client to sign commits by default for a local repository, in Git versions 2.0.0 and above git config --global commit.gpgsign true ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:5:2","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"提交带签名的 commit git commit -S -m \"your commit message\" 如果你设置了默认对提交进行签名，也可以如下操作 git commit -m \"your commit message\" 警告 如果你使用的 GPG key 使用了 GPG key passphrase, 则你进行提交的时候需要输入你的 passphrase. 你可以选择存储 GPG key passphrase 来避免每次的签名 passphrase 输入: Mac users, GPG Suite 可以将你的 GPG key passphrase 存储在 Mac OS Keychain Windows users, Gpg4win Manually 配置 gpg-agent 来存储 ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:5:3","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"sign tag # sign a tag git tag -s my_tag # verify your signed tag git tag -v my_tag ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:5:4","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"提交签名查看 git log usage git version 2.34.1 git log --show-signature 技巧 格式化日志查看签名，可自定义配置查看 log git log --color --graph --pretty=format:'%C(cyan)%G?%Creset %Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)\u003c%an\u003e%Creset | [%GK trust:%GT] %C(yellow)%GS%Creset' --abbrev-commit * G fb56816 - fixed rsync dir (2 days ago) \u003cxwi88\u003e | [325ACD1FD3B6AA80 trust:ultimate] xwi88 \u003c278810732@qq.com\u003e * G 63d6ec2 - fixed rsync deploy (2 days ago) \u003cxwi88\u003e | [325ACD1FD3B6AA80 trust:ultimate] xwi88 \u003c278810732@qq.com\u003e * N 1ac5368 - workflow add remote deploy (2 days ago) \u003cxwi88\u003e | [ trust:undefined] * E 289ae51 - add domain ICP info (2 days ago) \u003cxwi88\u003e | [EEA29F407613E698 trust:] * E f0e44bd - switch comment store repo:x (2 days ago) \u003cxwi88\u003e | [EEA29F407613E698 trust:] * E fbd5778 - fixed giscus issue (3 days ago) \u003cxwi88\u003e | [EEA29F407613E698 trust:] * E 5fa8d41 - replace utterances by giscus (3 days ago) \u003cxwi88\u003e | [EEA29F407613E698 trust:] G: for a good (valid) signature B: for a bad signature U: for a good signature with unknown validity X: for a good signature that has expired Y: for a good signature made by an expired key R: for a good signature made by a revoked key E: if the signature cannot be checked (e.g. missing key) N: for no signature ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:5:5","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"本地签名校验问题 通过命令 git log --show-signature 查看提交签名信息时可能会出现如下信息: commit e39e0920b68648b0751b7f91fffdd07080391945 (HEAD -\u003e main, origin/main, origin/HEAD) gpg: Signature made Thu Mar 10 00:19:37 2022 CST gpg: using RSA key 7E7F28C4EFFD7721E0133ED490684042688CB9BE gpg: Can't check signature: No public key 也可通过命令 git verify-commit e39e0920b68648b0751b7f91fffdd07080391945 校验指定提交签名是否合法 出现上述现象原因是因为你当前代码不存在对应 commits 使用的 gpg public key。我们可以通过导入对应提交者 gpg public keys 的方法解决。 ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:5:6","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"缺失 gpg keys 导入认证 为了准确获取完整提交的签名校验信息，我们需要对缺失 public keys 进行导入。我们的实验导入源参考如下： https://github.com/\u003cusername\u003e.gpg 需要你在 github 进行 GPG keys 上传配置 hkps://keyserver.ubuntu.com 需要你进行了 keys 上传 对导入的 public key 进行认证 gpg --list-keys --keyid-format=long 找到你要认证的 key gpg --lsign-key [GPG key ID] local sign gpg --edit-key [GPG key ID] local sign 与此处理选择一个即可 示例 从 github 导入我们本地缺失的 public key gpg --keyserver https://github.com/xwi88.gpg --recv-keys 7E7F28C4EFFD7721E0133ED490684042688CB9BE 认证 key gpg --lsign-key 7E7F28C4EFFD7721E0133ED490684042688CB9BE 查看认证key状态 gpg --list-keys --keyid-format=long pub rsa4096/90684042688CB9BE 2022-03-09 [SC] [expires: 2024-03-08] 7E7F28C4EFFD7721E0133ED490684042688CB9BE uid [ full ] xwi88 \u003c278810732@qq.com\u003e 再次校验我们的提交 git verify-commit e39e0920b68648b0751b7f91fffdd07080391945 gpg: Signature made Thu Mar 10 00:19:37 2022 CST gpg: using RSA key 7E7F28C4EFFD7721E0133ED490684042688CB9BE gpg: Good signature from \"xwi88 \u003c278810732@qq.com\u003e\" [full] ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:5:7","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"GPG keys 更新续期处理 gpg --edit-key [GPG key ID] 示例 sec rsa4096 2022-03-09 [SC] [expires: 2024-03-08] CE70FE5A7EB462DDA68EE86913431F2AC47C4AE0 uid [ultimate] tmp_gpg_local \u003c278810732@qq.com\u003e 此处 GPG key 为重新生成的，仅供演示使用 gpg --edit-key CE70FE5A7EB462DDA68EE86913431F2AC47C4AE0 关键输出如下 sec rsa4096/73758EF02856F877 created: 2022-03-09 expires: 2024-03-08 usage: SC trust: ultimate validity: ultimate [ultimate] (1). tmp_gpg_local \u003c278810732@qq.com\u003e 输入 expire 进行过期日期更新 gpg\u003e expire Changing expiration time for the primary key. Please specify how long the key should be valid. 0 = key does not expire \u003cn\u003e = key expires in n days \u003cn\u003ew = key expires in n weeks \u003cn\u003em = key expires in n months \u003cn\u003ey = key expires in n years Key is valid for? (0) 180d Key expires at Mon Sep 5 21:48:04 2022 CST Is this correct? (y/N) y sec rsa4096/13431F2AC47C4AE0 created: 2022-03-09 expires: 2022-09-05 usage: SC trust: ultimate validity: ultimate [ultimate] (1). tmp_gpg_local \u003c278810732@qq.com\u003e gpg\u003e trust sec rsa4096/13431F2AC47C4AE0 created: 2022-03-09 expires: 2022-09-05 usage: SC trust: ultimate validity: ultimate [ultimate] (1). tmp_gpg_local \u003c278810732@qq.com\u003e Please decide how far you trust this user to correctly verify other users' keys (by looking at passports, checking fingerprints from different sources, etc.) 1 = I don't know or won't say 2 = I do NOT trust 3 = I trust marginally 4 = I trust fully 5 = I trust ultimately m = back to the main menu Your decision? 5 Do you really want to set this key to ultimate trust? (y/N) y sec rsa4096/13431F2AC47C4AE0 created: 2022-03-09 expires: 2022-09-05 usage: SC trust: ultimate validity: ultimate [ultimate] (1). tmp_gpg_local \u003c278810732@qq.com\u003e gpg\u003e save gpg --list-secret-keys --keyid-format=long 验证过期时间是否更新 sec rsa4096/90684042688CB9BE 2022-03-09 [SC] [expires: 2024-03-08] 7E7F28C4EFFD7721E0133ED490684042688CB9BE uid [ultimate] xwi88 \u003c278810732@qq.com\u003e sec rsa4096/13431F2AC47C4AE0 2022-03-09 [SC] [expires: 2022-09-05] CE70FE5A7EB462DDA68EE86913431F2AC47C4AE0 uid [ultimate] tmp_gpg_local \u003c278810732@qq.com\u003e ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:6:0","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"GPG sign key 重新绑定 以下设置如无需要，请勿更新 警告 以下设置如无需要请勿更新 单项目更新可选 local 替换 –global git config --global commit.gpgSign true git config --global user.signingKey 13431F2AC47C4AE0 如有变动，请同步更新你的 git 仓库 GPG key ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:7:0","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"GPG keys 删除 gpg --delete-secret-key [uid] gpg --delete-secret-key [uid1] [uid2] 警告 非必要不删除，如果是因为过期则直接选择进行续期操作即可 tmp_gpg 对应的 uid 输入， 可以是以下任一个，请使用 GPG key ID: tmp_gpg 13431F2AC47C4AE0 CE70FE5A7EB462DDA68EE86913431F2AC47C4AE0 示例 gpg --delete-secret-key 13431F2AC47C4AE0 sec rsa4096/13431F2AC47C4AE0 2022-03-09 tmp_gpg_local \u003c278810732@qq.com\u003e Delete this key from the keyring? (y/N) y This is a secret key! - really delete? (y/N) y 验证删除是否成功：gpg --list-secret-keys sec rsa4096 2022-03-09 [SC] [expires: 2024-03-08] 7E7F28C4EFFD7721E0133ED490684042688CB9BE uid [ultimate] xwi88 \u003c278810732@qq.com\u003e ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:8:0","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["git"],"content":"参考 managing-commit-signature-verification S/MIME commit signature verification smime-signing-git-commits ","date":"2022-03-09","objectID":"/git-sign-tags-commits-with-gpg/:9:0","tags":["git","gpg"],"title":"Git 使用 GPG 对提交进行签名认证","uri":"/git-sign-tags-commits-with-gpg/"},{"categories":["go"],"content":"好用的 golang 多版本管理工具，轻松自由切换","date":"2022-03-08","objectID":"/go-vcs-gvm/","tags":["go","golang"],"title":"Go 版本管理工具 gvm","uri":"/go-vcs-gvm/"},{"categories":["go"],"content":"gvm 是一个 Linux， MacOS， Windows 下的命令行工具，类似于 nvm，anaconda 可以为你提供一个便捷的多版本 go 环境的管理和切换，强烈推荐使用。 ","date":"2022-03-08","objectID":"/go-vcs-gvm/:0:0","tags":["go","golang"],"title":"Go 版本管理工具 gvm","uri":"/go-vcs-gvm/"},{"categories":["go"],"content":"安装 ","date":"2022-03-08","objectID":"/go-vcs-gvm/:1:0","tags":["go","golang"],"title":"Go 版本管理工具 gvm","uri":"/go-vcs-gvm/"},{"categories":["go"],"content":"Mac OS X Requirements # Mac OS X Requirements xcode-select --install brew update brew install mercurial ","date":"2022-03-08","objectID":"/go-vcs-gvm/:1:1","tags":["go","golang"],"title":"Go 版本管理工具 gvm","uri":"/go-vcs-gvm/"},{"categories":["go"],"content":"安装 gvm gvm # zsh zsh \u003c \u003c(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer) # bash use, choose one! # bash \u003c \u003c(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer) 安装成功，会在家目录下增加 .gvm 的隐藏目录，并且在 .bashrc 或者 .zshrc 文件最底部增加一行如下内容 [[ -s \"$HOME/.gvm/scripts/gvm\" ]] \u0026\u0026 source \"$HOME/.gvm/scripts/gvm\" # shall set GO_SOURCE_URL to speed binary install export GO_SOURCE_URL=https://github.com/golang/go 如果想同时支持多个 shell 环境，可手动复制上述内容到相应 shell 配置文件! ","date":"2022-03-08","objectID":"/go-vcs-gvm/:1:2","tags":["go","golang"],"title":"Go 版本管理工具 gvm","uri":"/go-vcs-gvm/"},{"categories":["go"],"content":"Go 环境配置 通过 gvm use \u003cversion\u003e 切换 go version, 会改变部分环境变量，如: GOMODCACHE=\"$HOME/.gvm/pkgsets/go1.17.7/global/pkg/mod\" GOPATH=\"$HOME/.gvm/pkgsets/go1.17.7/global\" gvm 与上述环境变量相关的命令有: linkthis, pkgset, pkgenv 为了降低环境变化对开发等的影响可固定GOPATH 等 # shall set GO_SOURCE_URL to speed source install # default https://go.googlesource.com/go export GO_SOURCE_URL=https://github.com/golang/go # if use gvm, shall set some go env after gvm init statements # export GO111MODULE=on export GOPATH=\"$HOME/go\" export GOBIN=\"$GOPATH/bin\" export PATH=\"$GOBIN:$PATH\" export GOPROXY=https://goproxy.cn,https://goproxy.io/,https://mirrors.aliyun.com/goproxy/,https://gocenter.io/,https://proxy.golang.org,direct ","date":"2022-03-08","objectID":"/go-vcs-gvm/:1:3","tags":["go","golang"],"title":"Go 版本管理工具 gvm","uri":"/go-vcs-gvm/"},{"categories":["go"],"content":"gvm 用法 Usage: gvm [command] Description: GVM is the Go Version Manager Commands: version - print the gvm version number get - gets the latest code (for debugging) use - select a go version to use (--default to set permanently) diff - view changes to Go root help - display this usage text implode - completely remove gvm install - install go versions uninstall - uninstall go versions cross - install go cross compilers linkthis - link this directory into GOPATH list - list installed go versions listall - list available versions alias - manage go version aliases pkgset - manage go packages sets pkgenv - edit the environment for a package set ","date":"2022-03-08","objectID":"/go-vcs-gvm/:2:0","tags":["go","golang"],"title":"Go 版本管理工具 gvm","uri":"/go-vcs-gvm/"},{"categories":["go"],"content":"gvm install Usage: gvm install [version] [options] -s, --source=SOURCE Install Go from specified source. -n, --name=NAME Override the default name for this version. -pb, --with-protobuf Install Go protocol buffers. -b, --with-build-tools Install package build tools. -B, --binary Only install from binary. --prefer-binary Attempt a binary install, falling back to source. -h, --help Display this message. ","date":"2022-03-08","objectID":"/go-vcs-gvm/:2:1","tags":["go","golang"],"title":"Go 版本管理工具 gvm","uri":"/go-vcs-gvm/"},{"categories":["go"],"content":"简单使用 gvm use - select a go version to use (–default to set permanently) gvm install go1.16.14 -B # 如果机器没有 pre installed go version gvm install go1.17.7 gvm use go1.17.7 [–default] gvm uninstall go1.17.7 gvm install go1.17.7 –source=https://xxx@github.com/xxx/go gvm install go1.17.7 -s=https://godoc.org/golang.org/dl/go1.17.7 gvm implode 卸载 gvm ","date":"2022-03-08","objectID":"/go-vcs-gvm/:2:2","tags":["go","golang"],"title":"Go 版本管理工具 gvm","uri":"/go-vcs-gvm/"},{"categories":["go"],"content":"示例 # gvm list gvm gos (installed) go1.16.14 =\u003e go1.17.7 go1.18rc1 system ","date":"2022-03-08","objectID":"/go-vcs-gvm/:3:0","tags":["go","golang"],"title":"Go 版本管理工具 gvm","uri":"/go-vcs-gvm/"},{"categories":["hugo"],"content":"Hugo 评论插件 giscus 的集成与支持","date":"2022-03-07","objectID":"/hugo-plugin-giscus-support/","tags":["hugo-plugin"],"title":"Hugo Plugin Giscus Support","uri":"/hugo-plugin-giscus-support/"},{"categories":["hugo"],"content":"Hugo 评论插件用了几个感觉好用的还是 utterances 与 giscus，前者功能太过单，最新的基于 github discussion 的 giscus 使用体验非常不错。本文基于个人实验验证，旨在为需要的人提供方便。 blog theme: LoveIt giscus 体验 ","date":"2022-03-07","objectID":"/hugo-plugin-giscus-support/:0:0","tags":["hugo-plugin"],"title":"Hugo Plugin Giscus Support","uri":"/hugo-plugin-giscus-support/"},{"categories":["hugo"],"content":"giscus 集成使用 utteranc utteranc zh-CN ","date":"2022-03-07","objectID":"/hugo-plugin-giscus-support/:1:0","tags":["hugo-plugin"],"title":"Hugo Plugin Giscus Support","uri":"/hugo-plugin-giscus-support/"},{"categories":["hugo"],"content":"介绍 由 GitHub Discussions 驱动的评论系统。让访客借助 GitHub 在你的网站上留下评论和反应吧！本项目受 utterances 强烈启发。 开源。🌏 无跟踪，无广告，永久免费。📡 🚫 无需数据库。全部数据均储存在 GitHub Discussions 中。:octocat: 支持自定义主题！🌗 支持多种语言。🌐 高度可配置。🔧 自动从 GitHub 拉取新评论与编辑。🔃 可自建服务！🤳 注意： giscus 仍处于活跃开发中。GitHub 也还在活跃地开发 Discussions 及其 API。因此，一些 giscus 的特性可能随时间损坏或改变。 ","date":"2022-03-07","objectID":"/hugo-plugin-giscus-support/:1:1","tags":["hugo-plugin"],"title":"Hugo Plugin Giscus Support","uri":"/hugo-plugin-giscus-support/"},{"categories":["hugo"],"content":"配置 要求 此仓库是公开的，否则访客将无法查看 discussion。 giscus app 已安装否则访客将无法评论和回应。 Discussions 功能已在你的仓库中启用。 配置内容 \u003cscript src=\"https://giscus.app/client.js\" data-repo=\"[在此输入仓库]\" data-repo-id=\"[在此输入仓库 ID]\" data-category=\"[在此输入分类名]\" data-category-id=\"[在此输入分类 ID]\" data-mapping=\"pathname\" data-reactions-enabled=\"1\" data-emit-metadata=\"0\" data-input-position=\"bottom\" data-theme=\"light\" data-lang=\"zh-CN\" crossorigin=\"anonymous\" async\u003e \u003c/script\u003e 你可以在嵌入的页面中使用 .giscus 和 .giscus-frame 选择器来自定义容器布局 部分参数获取 repo-id, category-id github graphql api category 一般为 Announcements, 或者根据需要选择其他的，务必保证与 category-id 一致！ mapping 根据你的需要填写，一般选择 pathname 经过以上步骤，我们就可以轻松的使用此插件了，但是如果要将其嵌入到当前使用的模板中还需要做一些特殊的处理。 ","date":"2022-03-07","objectID":"/hugo-plugin-giscus-support/:1:2","tags":["hugo-plugin"],"title":"Hugo Plugin Giscus Support","uri":"/hugo-plugin-giscus-support/"},{"categories":["hugo"],"content":"主题修改支持 giscus 可以通过两种方式进行改造支持: theme.js js 方式 comment.html 模板方式 js 方式更灵活一些。我们写了两种方式，注释掉了模板插件方式修改，对修改感兴趣的可以参考相应变更: replace utterances by giscus github replace utterances by giscus gitee ","date":"2022-03-07","objectID":"/hugo-plugin-giscus-support/:1:3","tags":["hugo-plugin"],"title":"Hugo Plugin Giscus Support","uri":"/hugo-plugin-giscus-support/"},{"categories":["hugo"],"content":"效果查看 xwi88.com blog.xiw88.com ","date":"2022-03-07","objectID":"/hugo-plugin-giscus-support/:1:4","tags":["hugo-plugin"],"title":"Hugo Plugin Giscus Support","uri":"/hugo-plugin-giscus-support/"},{"categories":["hugo"],"content":"Hugo 网站计数及阅读量统计此插件不蒜子集成使用","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"Hugo 网站访问量、文章阅读次数统计插件 busuanzi 集成配置使用，基于个人实验验证，旨在为需要的人提供方便，效果见 我的博客 或访问 xwi88.github.io。 ","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/:0:0","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"busuanzi busuanzi 静态网站建站现在有很多快速的技术和平台，但静态是优点也有缺点，由于是静态的，一些动态的内容如评论、计数等等模块就需要借助外来平台，计数可采用 “不蒜子”，由 Bruce 开发的一款轻量级的网页计数器。使用非常简单：两行代码可搞定， 一行脚本，一行标签。 ","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/:1:0","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"统计指标 PV 即 Page View，网站浏览量 指页面的浏览次数，用以衡量网站用户访问的网页数量。用户每打开一个页面便记录 1 次 PV，多次打开同一页面累计浏览量 UV 即 Unique Visitor，独立访客数 指 1 天内访问某站点的人数，以 cookie 为依据。1 天内同一访客的多次访问只计为 1 个访客。 ","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/:1:1","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"不蒜子与其他统计工具的区别 不蒜子 可直接将访问次数显示在您在网页上（也可不显示） 对于已经上线一段时间的网站，不蒜子允许您初始化首次数据 需要注册登录 只提供计数，样式完全由用户控制 ","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/:1:2","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"简单使用 只计数不显示，只安装脚本代码，不安装标签代码。 \u003cscript async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"\u003e\u003c/script\u003e \u003cspan id=\"busuanzi_container_site_pv\"\u003e本站总访问量\u003cspan id=\"busuanzi_value_site_pv\"\u003e\u003c/span\u003e次\u003c/span\u003e \u003cspan id=\"busuanzi_container_site_uv\"\u003e本站总访客数\u003cspan id=\"busuanzi_value_site_uv\"\u003e\u003c/span\u003e人\u003c/span\u003e \u003cspan id=\"busuanzi_container_page_pv\"\u003e本文总阅读量\u003cspan id=\"busuanzi_value_page_pv\"\u003e\u003c/span\u003e次\u003c/span\u003e ","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/:1:3","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"Hugo 集成 如果你没有开发主题的强烈欲望，且想后续持续更新选用的主题，请采用合理的方式(模板配置等的覆盖)进行自定义修改。 修改与变动 我们将对页面进行阅读计数 PV，对整站进行 PV，UV 统计。结合当前使用的主题，需要修改的地方有： footer.html 页脚模板页 请注意: 此处分为全局 footer.html 与单页 footer.html 计数使用全局 footer.html single.html 内容页模板 busuanzi.html 新加的 busuanzi 模板 config.toml 或 config.yaml 或你指定的配置文件 需要变动的地方如图所示: 自定义配置 # xwi88 自定义配置 xwi88Cfg [params.xwi88Cfg] [params.xwi88Cfg.summary] update = true # summary 更新日期显示 [params.xwi88Cfg.page] update = true # pages 更新日期显示 [params.xwi88Cfg.busuanzi] enable = true # custom uv for the whole site site_uv = true site_uv_pre = '\u003ci class=\"fa fa-user\"\u003e\u003c/i\u003e' # 字符或提示语 site_uv_post = '' # custom pv for the whole site site_pv = true site_pv_pre = '\u003ci class=\"fa fa-eye\"\u003e\u003c/i\u003e' # site_pv_post = '\u003ci class=\"far fa-eye fa-fw\"\u003e\u003c/i\u003e' site_pv_post = '' # custom pv span for one page only page_pv = true page_pv_pre = '\u003ci class=\"far fa-eye fa-fw\"\u003e\u003c/i\u003e' page_pv_post = '' 模板添加 busuanzi.html {{ if .params.enable }} {{ if eq .bsz_type \"footer\" }} {{/* 只有 footer 才刷新，防止页面进行多次调用，计数重复; 只要启用就计数，显示与否看具体设置 */}} \u003cscript async src=\" //busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js \"\u003e\u003c/script\u003e {{ end }} {{ if or (eq .params.site_pv true) (eq .params.site_uv true) (eq .params.page_pv true) }} {{ if eq .bsz_type \"footer\" }} \u003csection\u003e {{ if eq .params.site_pv true }} \u003cspan id=\"busuanzi_container_value_site_pv\"\u003e {{- with .params.page_pv_pre -}} {{ . | safeHTML }} {{ end }} \u003cspan id=\"busuanzi_value_site_pv\"\u003e\u003c/span\u003e \u003c/span\u003e {{ end }} {{ if and (eq .params.site_pv true) (eq .params.site_uv true) }} \u0026nbsp;|\u0026nbsp; {{ end }} {{ if eq .params.site_uv true }} \u003cspan id=\"busuanzi_container_value_site_uv\"\u003e {{- with .params.site_uv_pre -}} {{ . | safeHTML }} {{ end }} \u003cspan id=\"busuanzi_value_site_uv\"\u003e\u003c/span\u003e \u003c/span\u003e {{ end }} \u003c/section\u003e {{ end }} {{/* page pv 只在 page 显示 */}} {{ if and (eq .params.page_pv true) (eq .bsz_type \"page-reading\") }} \u003cspan id=\"busuanzi_container_value_page_pv\"\u003e {{- with .params.page_pv_pre -}} {{ . | safeHTML }} {{ end }} \u003cspan id=\"busuanzi_value_page_pv\"\u003e\u003c/span\u003e\u0026nbsp; {{- T \"views\" -}} \u003c/span\u003e {{ end }} {{ end }} {{ end }} 相应位置引入我们编写的插件: busuanzi # 全局 footer.html {{- /* busuanzi plugin */ -}} {{- partial \"plugin/busuanzi.html\" (dict \"params\" .Site.Params.xwi88Cfg.busuanzi \"bsz_type\" \"footer\") -}} # 单页面 single.html {{- /* busuanzi plugin */ -}} {{- partial \"plugin/busuanzi.html\" (dict \"params\" .Site.Params.xwi88Cfg.busuanzi \"bsz_type\" \"page-reading\") -}} 代码变更详情可参考 github.com/xwi88/xwi88.github.io.source gitee.com/xwi88/xwi88 ","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/:1:4","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"Hugo Plugin Utterances Usage","date":"2022-03-04","objectID":"/hugo-plugin-utterances-usage/","tags":["hugo-plugin"],"title":"Hugo 插件 Utterances 用法","uri":"/hugo-plugin-utterances-usage/"},{"categories":["hugo"],"content":"Hugo 评论插件 utterances 配置使用, 基于个人实验验证，旨在为需要的人提供方便。 blog theme: LoveIt ","date":"2022-03-04","objectID":"/hugo-plugin-utterances-usage/:0:0","tags":["hugo-plugin"],"title":"Hugo 插件 Utterances 用法","uri":"/hugo-plugin-utterances-usage/"},{"categories":["hugo"],"content":"utteranc utteranc ","date":"2022-03-04","objectID":"/hugo-plugin-utterances-usage/:1:0","tags":["hugo-plugin"],"title":"Hugo 插件 Utterances 用法","uri":"/hugo-plugin-utterances-usage/"},{"categories":["hugo"],"content":"introduction A lightweight comments widget built on GitHub issues. Use GitHub issues for blog comments, wiki pages and more! Open source. 🙌 No tracking, no ads, always free. 📡🚫 No lock-in. All data stored in GitHub issues. 🔓 Styled with Primer, the css toolkit that powers GitHub. 💅 Dark theme. 🌘 Lightweight. Vanilla TypeScript. No font downloads, JavaScript frameworks or polyfills for evergreen browsers. 🐦🌲 ","date":"2022-03-04","objectID":"/hugo-plugin-utterances-usage/:1:1","tags":["hugo-plugin"],"title":"Hugo 插件 Utterances 用法","uri":"/hugo-plugin-utterances-usage/"},{"categories":["hugo"],"content":"configuration Choose the repository utterances will connect to. Make sure the repo is public, otherwise your readers will not be able to view the issues/comments. Make sure the utterances app is installed on the repo, otherwise users will not be able to post comments. If your repo is a fork, navigate to its settings tab and confirm the issues feature is turned on. config update after this config, maybe work well. ## ref https://utteranc.es/ [params.utteranc] enable = true repo = \"owner/repo\" # your repo issueTerm = \"pathname\" theme = \"github-light\" blog post ↔ issue mapping Choose the mapping between blog posts and GitHub issues. Pls visit utterances app to check and set the config. issue label Choose the label that will be assigned to issues created by Utterances. default: Comment Label names are case sensitive. The label must exist in your repo- Utterances cannot attach labels that do not exist. Emoji are supported in label names.✨💬✨ theme Choose an Utterances theme that matches your blog. ","date":"2022-03-04","objectID":"/hugo-plugin-utterances-usage/:1:2","tags":["hugo-plugin"],"title":"Hugo 插件 Utterances 用法","uri":"/hugo-plugin-utterances-usage/"},{"categories":["hugo"],"content":"enable utterances Add the following script tag to your blog’s template. Position it where you want the comments to appear. Customize the layout using the .utterances and .utterances-frame selectors. \u003cscript src=\"https://utteranc.es/client.js\" repo=\"[ENTER REPO HERE]\" issue-term=\"pathname\" theme=\"github-light\" crossorigin=\"anonymous\" async\u003e \u003c/script\u003e ","date":"2022-03-04","objectID":"/hugo-plugin-utterances-usage/:1:3","tags":["hugo-plugin"],"title":"Hugo 插件 Utterances 用法","uri":"/hugo-plugin-utterances-usage/"},{"categories":null,"content":" Gopher，开源贡献者，后端研发。互联网教育、区块链、广告投放等行业多年业者。 ","date":"2022-02-28","objectID":"/about/:0:0","tags":null,"title":"关于我","uri":"/about/"},{"categories":null,"content":"开源 docker-compose-resources 常用基础镜像封装发布 log4go go simple log pkg gp go predict with tensorflow collectd docker 内存及 cpu 信息收集 config4go 基于 viper 的配置解析工具 version 打包二进制版本信息 ","date":"2022-02-28","objectID":"/about/:1:0","tags":null,"title":"关于我","uri":"/about/"},{"categories":null,"content":"基本技能 Docker Git Go Linux Python ","date":"2022-02-28","objectID":"/about/:2:0","tags":null,"title":"关于我","uri":"/about/"},{"categories":null,"content":"资源 DockerHub 已发布 docker 镜像 ","date":"2022-02-28","objectID":"/about/:3:0","tags":null,"title":"关于我","uri":"/about/"},{"categories":null,"content":"学习 Rust Vue ","date":"2022-02-28","objectID":"/about/:4:0","tags":null,"title":"关于我","uri":"/about/"},{"categories":null,"content":"更多 github gitee 仅做同步使用 ","date":"2022-02-28","objectID":"/about/:5:0","tags":null,"title":"关于我","uri":"/about/"},{"categories":["git"],"content":"Git 克隆非常慢问题的解决","date":"2022-02-26","objectID":"/git-clone-slowly-solve/","tags":["git","dev_ops"],"title":"Git 克隆非常慢问题的解决","uri":"/git-clone-slowly-solve/"},{"categories":["git"],"content":"对于经常使用 github 的人来说，当我们进行 clone, fetch, pull, push 等等操作时，如果总是出现莫名的超时或者非常慢这是很让人捉急的，会严重影响效率，为此本文给出了几种解决方案。 造成上述情况的原因是多方面的，最大的可能就是网络被限制了, 如: github.global.ssl.fastly.net。 以项目 docker-compose-resources clone 为例: git clone https://github.com/v8fg/docker-compose-resources.git ","date":"2022-02-26","objectID":"/git-clone-slowly-solve/:0:0","tags":["git","dev_ops"],"title":"Git 克隆非常慢问题的解决","uri":"/git-clone-slowly-solve/"},{"categories":["git"],"content":"解决方案 ","date":"2022-02-26","objectID":"/git-clone-slowly-solve/:1:0","tags":["git","dev_ops"],"title":"Git 克隆非常慢问题的解决","uri":"/git-clone-slowly-solve/"},{"categories":["git"],"content":"Github 镜像仓库 浏览器搜索获取镜像地址替换后下载 https://hub.fastgit.org (不保证可用) https://github.91chi.fun (不保证可用) 浏览器安装插件: github 加速器, 通过此插件获取加速地址后 clone 通过其他 git 存储库进行镜像 clone 浏览器直接下载 zip ","date":"2022-02-26","objectID":"/git-clone-slowly-solve/:1:1","tags":["git","dev_ops"],"title":"Git 克隆非常慢问题的解决","uri":"/git-clone-slowly-solve/"},{"categories":["git"],"content":"代理加速 proxy 不太推荐 gh-proxy (推荐方案) FastGithub (推荐方案 ☆☆☆☆☆☆) FastGithub github 加速神器: 解决 github 打不开,用户头像无法加载,releases 无法上传下载, git-clone, git-pull, git-push 失败等问题。 功能 提供域名的纯净 IP 解析； 提供 IP 测速并选择最快的 IP； 提供域名的 tls 连接自定义配置； google 的 CDN 资源替换，解决大量国外网站无法加载 js 和 cs s的问题； 安装配置 FastGithub github-release # linux-x64 ## terminal start sudo ./fastgithub # 设置系统自动代理为http://127.0.0.1:38457，或手动代理http/https为127.0.0.1:38457 ## service start sudo ./fastgithub start // 以systemd服务安装并启动 sudo ./fastgithub stop // 以systemd服务卸载并删除 # 设置系统自动代理为http://127.0.0.1:38457，或手动代理http/https为127.0.0.1:38457 # macOS-x64 ## 1. start fastgithub ## 2. install cacert/fastgithub.cer and set trustt # 设置系统自动代理为http://127.0.0.1:38457，或手动代理http/https为127.0.0.1:38457 # 证书验证 # 若 git 操作提示 SSL certificate problem # 需要关闭 git 的证书验证：git config --global http.sslverify false 安全性及合法性说明 以下内容摘录自 FastGithub.README FastGithub为每台不同的主机生成自颁发CA证书，保存在cacert文件夹下。客户端设备需要安装和无条件信任自颁发的CA证书，请不要将证书私钥泄露给他人，以免造成损失。 《国际联网暂行规定》第六条规定：“计算机信息网络直接进行国际联网，必须使用邮电部国家公用电信网提供的国际出入口信道。任何单位和个人不得自行建立或者使用其他信道进行国际联网。” FastGithub本地代理使用的都是“公用电信网提供的国际出入口信道”，从国外Github服务器到国内用户电脑上FastGithub程序的流量，使用的是正常流量通道，其间未对流量进行任何额外加密（仅有网页原有的TLS加密，区别于proxy的流量加密），而FastGithub获取到网页数据之后发生的整个代理过程完全在国内，不再适用国际互联网相关之规定。 ","date":"2022-02-26","objectID":"/git-clone-slowly-solve/:1:2","tags":["git","dev_ops"],"title":"Git 克隆非常慢问题的解决","uri":"/git-clone-slowly-solve/"},{"categories":["git"],"content":"Hosts 修改 主要是借助 nslookup or dig 获取域名对应的可访问 ip, 然后在 hosts 文件中加上 ip–\u003edomain 的映射，刷新 DNS 缓存便可。 hosts 文件是 Linux 系统中一个负责 IP 地址与域名快速解析的文件,以 ASCII 格式保存在 /etc 目录下,文件名为 hosts (不同的 Linux 版本,这个配置文件也可能不同.比如 Debian 的对应文件是 /etc/hostname) hosts 文件包含了 IP 地址和主机名之间的映射,还包括主机名的别名.在没有域名服务器的情况下,系统上的所有网络程序都通过查询该文件来解析对应于某个主机名的 IP 地址,否则就需要使用 DNS 服务程序来解决.通常可以将常用的域名和 IP 地址映射加入到 hosts 文件中,实现快速方便的访问. nslookup github.global.ssl.fastly.net nslookup github.com # vi /etc/hosts xxx github.global.ssl.fastly.net xx github.com # refresh DNS cache # linux sudo /etc/init.d/networking restart # or nscd -i hosts # arch linux /etc/rc.d/nscd restart ## macos lookupd -flushcache # dscacheutil -flushcache ","date":"2022-02-26","objectID":"/git-clone-slowly-solve/:1:3","tags":["git","dev_ops"],"title":"Git 克隆非常慢问题的解决","uri":"/git-clone-slowly-solve/"},{"categories":null,"content":"常用 Github DockerHub VS Code Go Wiki Awesome Go Hugo 官方 Go Rust Vue Julia V Python 研发推荐 iterm2 Grafana ELK Pyroscope kafkatool dbeaver 学习社区 力扣 Reddit Medium 哔哩哔哩 极客时间 在线书籍📚 gitbook 书栈网 算法与数据处理 conda pandas tensorflow pytorch HugeCTR 绘图神器 Process ON diagrams 亿图 在线工具 docsmall tinypng tablesgenerator 免费图库 pexels pngimg unsplash pixabay 快捷访问 Go网址导航 awesome 其他 wps ","date":"0001-01-01","objectID":"/favorite/:0:0","tags":null,"title":"超实用收藏","uri":"/favorite/"}]