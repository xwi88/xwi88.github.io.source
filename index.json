[{"categories":["hugo"],"content":"Hugo 网站计数及阅读量统计此插件不蒜子集成使用","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"Hugo 网站访问量、文章阅读次数统计插件 busuanzi 集成配置使用，基于个人实验验证，旨在为需要的人提供方便，效果见 我的博客 或访问 xwi88.github.io。 ","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/:0:0","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"busuanzi busuanzi 静态网站建站现在有很多快速的技术和平台，但静态是优点也有缺点，由于是静态的，一些动态的内容如评论、计数等等模块就需要借助外来平台，计数可采用 “不蒜子”，由 Bruce 开发的一款轻量级的网页计数器。使用非常简单：两行代码可搞定， 一行脚本，一行标签。 ","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/:1:0","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"统计指标 PV 即 Page View，网站浏览量 指页面的浏览次数，用以衡量网站用户访问的网页数量。用户每打开一个页面便记录 1 次 PV，多次打开同一页面累计浏览量 UV 即 Unique Visitor，独立访客数 指 1 天内访问某站点的人数，以 cookie 为依据。1 天内同一访客的多次访问只计为 1 个访客。 ","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/:1:1","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"不蒜子与其他统计工具的区别 不蒜子 可直接将访问次数显示在您在网页上（也可不显示） 对于已经上线一段时间的网站，不蒜子允许您初始化首次数据 需要注册登录 只提供计数，样式完全由用户控制 ","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/:1:2","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"简单使用 只计数不显示，只安装脚本代码，不安装标签代码。 \u003cscript async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"\u003e\u003c/script\u003e \u003cspan id=\"busuanzi_container_site_pv\"\u003e本站总访问量\u003cspan id=\"busuanzi_value_site_pv\"\u003e\u003c/span\u003e次\u003c/span\u003e \u003cspan id=\"busuanzi_container_site_uv\"\u003e本站总访客数\u003cspan id=\"busuanzi_value_site_uv\"\u003e\u003c/span\u003e人\u003c/span\u003e \u003cspan id=\"busuanzi_container_page_pv\"\u003e本文总阅读量\u003cspan id=\"busuanzi_value_page_pv\"\u003e\u003c/span\u003e次\u003c/span\u003e ","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/:1:3","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"Hugo 集成 如果你没有开发主题的强烈欲望，且想后续持续更新选用的主题，请采用合理的方式(模板配置等的覆盖)进行自定义修改。 修改与变动 我们将对页面进行阅读计数 PV，对整站进行 PV，UV 统计。结合当前使用的主题，需要修改的地方有： footer.html 页脚模板页 请注意: 此处分为全局 footer.html 与单页 footer.html 计数使用全局 footer.html single.html 内容页模板 busuanzi.html 新加的 busuanzi 模板 config.toml 或 config.yaml 或你指定的配置文件 需要变动的地方如图所示: 自定义配置 # xwi88 自定义配置 xwi88Cfg [params.xwi88Cfg] [params.xwi88Cfg.summary] update = true # summary 更新日期显示 [params.xwi88Cfg.page] update = true # pages 更新日期显示 [params.xwi88Cfg.busuanzi] enable = true # custom uv for the whole site site_uv = true site_uv_pre = '\u003ci class=\"fa fa-user\"\u003e\u003c/i\u003e' # 字符或提示语 site_uv_post = '' # custom pv for the whole site site_pv = true site_pv_pre = '\u003ci class=\"fa fa-eye\"\u003e\u003c/i\u003e' # site_pv_post = '\u003ci class=\"far fa-eye fa-fw\"\u003e\u003c/i\u003e' site_pv_post = '' # custom pv span for one page only page_pv = true page_pv_pre = '\u003ci class=\"far fa-eye fa-fw\"\u003e\u003c/i\u003e' page_pv_post = '' 模板添加 busuanzi.html {{ if .params.enable }} {{ if eq .bsz_type \"footer\" }} {{/* 只有 footer 才刷新，防止页面进行多次调用，计数重复; 只要启用就计数，显示与否看具体设置 */}} \u003cscript async src=\" //busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js \"\u003e\u003c/script\u003e {{ end }} {{ if or (eq .params.site_pv true) (eq .params.site_uv true) (eq .params.page_pv true) }} {{ if eq .bsz_type \"footer\" }} \u003csection\u003e {{ if eq .params.site_pv true }} \u003cspan id=\"busuanzi_container_value_site_pv\"\u003e {{- with .params.page_pv_pre -}} {{ . | safeHTML }} {{ end }} \u003cspan id=\"busuanzi_value_site_pv\"\u003e\u003c/span\u003e \u003c/span\u003e {{ end }} {{ if and (eq .params.site_pv true) (eq .params.site_uv true) }} \u0026nbsp;|\u0026nbsp; {{ end }} {{ if eq .params.site_uv true }} \u003cspan id=\"busuanzi_container_value_site_uv\"\u003e {{- with .params.site_uv_pre -}} {{ . | safeHTML }} {{ end }} \u003cspan id=\"busuanzi_value_site_uv\"\u003e\u003c/span\u003e \u003c/span\u003e {{ end }} \u003c/section\u003e {{ end }} {{/* page pv 只在 page 显示 */}} {{ if and (eq .params.page_pv true) (eq .bsz_type \"page-reading\") }} \u003cspan id=\"busuanzi_container_value_page_pv\"\u003e {{- with .params.page_pv_pre -}} {{ . | safeHTML }} {{ end }} \u003cspan id=\"busuanzi_value_page_pv\"\u003e\u003c/span\u003e\u0026nbsp; {{- T \"views\" -}} \u003c/span\u003e {{ end }} {{ end }} {{ end }} 相应位置引入我们编写的插件: busuanzi # 全局 footer.html {{- /* busuanzi plugin */ -}} {{- partial \"plugin/busuanzi.html\" (dict \"params\" .Site.Params.xwi88Cfg.busuanzi \"bsz_type\" \"footer\") -}} # 单页面 single.html {{- /* busuanzi plugin */ -}} {{- partial \"plugin/busuanzi.html\" (dict \"params\" .Site.Params.xwi88Cfg.busuanzi \"bsz_type\" \"page-reading\") -}} 代码变更详情可参考 github.com/xwi88/xwi88.github.io.source gitee.com/xwi88/xwi88 ","date":"2022-03-05","objectID":"/hugo-plugin-busuanzi/:1:4","tags":["hugo-plugin"],"title":"Hugo 网站访问计数插件不蒜子集成","uri":"/hugo-plugin-busuanzi/"},{"categories":["hugo"],"content":"Hugo Plugin Utterances Usage","date":"2022-03-04","objectID":"/hugo-plugin-utterances-usage/","tags":["hugo-plugin"],"title":"Hugo 插件 Utterances 用法","uri":"/hugo-plugin-utterances-usage/"},{"categories":["hugo"],"content":"Hugo 评论插件 utterances 配置使用, 基于个人实验验证，旨在为需要的人提供方便。 blog theme: LoveIt ","date":"2022-03-04","objectID":"/hugo-plugin-utterances-usage/:0:0","tags":["hugo-plugin"],"title":"Hugo 插件 Utterances 用法","uri":"/hugo-plugin-utterances-usage/"},{"categories":["hugo"],"content":"utteranc utteranc ","date":"2022-03-04","objectID":"/hugo-plugin-utterances-usage/:1:0","tags":["hugo-plugin"],"title":"Hugo 插件 Utterances 用法","uri":"/hugo-plugin-utterances-usage/"},{"categories":["hugo"],"content":"introduction A lightweight comments widget built on GitHub issues. Use GitHub issues for blog comments, wiki pages and more! Open source. 🙌 No tracking, no ads, always free. 📡🚫 No lock-in. All data stored in GitHub issues. 🔓 Styled with Primer, the css toolkit that powers GitHub. 💅 Dark theme. 🌘 Lightweight. Vanilla TypeScript. No font downloads, JavaScript frameworks or polyfills for evergreen browsers. 🐦🌲 ","date":"2022-03-04","objectID":"/hugo-plugin-utterances-usage/:1:1","tags":["hugo-plugin"],"title":"Hugo 插件 Utterances 用法","uri":"/hugo-plugin-utterances-usage/"},{"categories":["hugo"],"content":"configuration Choose the repository utterances will connect to. Make sure the repo is public, otherwise your readers will not be able to view the issues/comments. Make sure the utterances app is installed on the repo, otherwise users will not be able to post comments. If your repo is a fork, navigate to its settings tab and confirm the issues feature is turned on. config update after this config, maybe work well. ## ref https://utteranc.es/ [params.utteranc] enable = true repo = \"owner/repo\" # your repo issueTerm = \"pathname\" theme = \"github-light\" blog post ↔ issue mapping Choose the mapping between blog posts and GitHub issues. Pls visit utterances app to check and set the config. issue label Choose the label that will be assigned to issues created by Utterances. default: Comment Label names are case sensitive. The label must exist in your repo- Utterances cannot attach labels that do not exist. Emoji are supported in label names.✨💬✨ theme Choose an Utterances theme that matches your blog. ","date":"2022-03-04","objectID":"/hugo-plugin-utterances-usage/:1:2","tags":["hugo-plugin"],"title":"Hugo 插件 Utterances 用法","uri":"/hugo-plugin-utterances-usage/"},{"categories":["hugo"],"content":"enable utterances Add the following script tag to your blog’s template. Position it where you want the comments to appear. Customize the layout using the .utterances and .utterances-frame selectors. \u003cscript src=\"https://utteranc.es/client.js\" repo=\"[ENTER REPO HERE]\" issue-term=\"pathname\" theme=\"github-light\" crossorigin=\"anonymous\" async\u003e \u003c/script\u003e ","date":"2022-03-04","objectID":"/hugo-plugin-utterances-usage/:1:3","tags":["hugo-plugin"],"title":"Hugo 插件 Utterances 用法","uri":"/hugo-plugin-utterances-usage/"},{"categories":null,"content":"TODO todo ","date":"2022-02-28","objectID":"/about/:1:0","tags":null,"title":"关于 xwi88","uri":"/about/"},{"categories":["git"],"content":"Git 克隆非常慢问题的解决","date":"2022-02-26","objectID":"/git-clone-slowly-solve/","tags":["git","dev_ops"],"title":"Git 克隆非常慢问题的解决","uri":"/git-clone-slowly-solve/"},{"categories":["git"],"content":"对于经常使用 github 的人来说，当我们进行 clone, fetch, pull, push 等等操作时，如果总是出现莫名的超时或者非常慢这是很让人捉急的，会严重影响效率，为此本文给出了几种解决方案。 造成上述情况的原因是多方面的，最大的可能就是网络被限制了, 如: github.global.ssl.fastly.net。 以项目 docker-compose-resources clone 为例: git clone https://github.com/v8fg/docker-compose-resources.git ","date":"2022-02-26","objectID":"/git-clone-slowly-solve/:0:0","tags":["git","dev_ops"],"title":"Git 克隆非常慢问题的解决","uri":"/git-clone-slowly-solve/"},{"categories":["git"],"content":"解决方案 ","date":"2022-02-26","objectID":"/git-clone-slowly-solve/:1:0","tags":["git","dev_ops"],"title":"Git 克隆非常慢问题的解决","uri":"/git-clone-slowly-solve/"},{"categories":["git"],"content":"Github 镜像仓库 浏览器搜索获取镜像地址替换后下载 https://hub.fastgit.org (不保证可用) https://github.91chi.fun (不保证可用) 浏览器安装插件: github 加速器, 通过此插件获取加速地址后 clone 通过其他 git 存储库进行镜像 clone 浏览器直接下载 zip ","date":"2022-02-26","objectID":"/git-clone-slowly-solve/:1:1","tags":["git","dev_ops"],"title":"Git 克隆非常慢问题的解决","uri":"/git-clone-slowly-solve/"},{"categories":["git"],"content":"代理加速 proxy 不太推荐 gh-proxy (推荐方案) FastGithub (推荐方案 ☆☆☆☆☆☆) FastGithub github 加速神器: 解决 github 打不开,用户头像无法加载,releases 无法上传下载, git-clone, git-pull, git-push 失败等问题。 功能 提供域名的纯净 IP 解析； 提供 IP 测速并选择最快的 IP； 提供域名的 tls 连接自定义配置； google 的 CDN 资源替换，解决大量国外网站无法加载 js 和 cs s的问题； 安装配置 FastGithub github-release # linux-x64 ## terminal start sudo ./fastgithub # 设置系统自动代理为http://127.0.0.1:38457，或手动代理http/https为127.0.0.1:38457 ## service start sudo ./fastgithub start // 以systemd服务安装并启动 sudo ./fastgithub stop // 以systemd服务卸载并删除 # 设置系统自动代理为http://127.0.0.1:38457，或手动代理http/https为127.0.0.1:38457 # macOS-x64 ## 1. start fastgithub ## 2. install cacert/fastgithub.cer and set trustt # 设置系统自动代理为http://127.0.0.1:38457，或手动代理http/https为127.0.0.1:38457 # 证书验证 # 若 git 操作提示 SSL certificate problem # 需要关闭 git 的证书验证：git config --global http.sslverify false 安全性及合法性说明 以下内容摘录自 FastGithub.README FastGithub为每台不同的主机生成自颁发CA证书，保存在cacert文件夹下。客户端设备需要安装和无条件信任自颁发的CA证书，请不要将证书私钥泄露给他人，以免造成损失。 《国际联网暂行规定》第六条规定：“计算机信息网络直接进行国际联网，必须使用邮电部国家公用电信网提供的国际出入口信道。任何单位和个人不得自行建立或者使用其他信道进行国际联网。” FastGithub本地代理使用的都是“公用电信网提供的国际出入口信道”，从国外Github服务器到国内用户电脑上FastGithub程序的流量，使用的是正常流量通道，其间未对流量进行任何额外加密（仅有网页原有的TLS加密，区别于proxy的流量加密），而FastGithub获取到网页数据之后发生的整个代理过程完全在国内，不再适用国际互联网相关之规定。 ","date":"2022-02-26","objectID":"/git-clone-slowly-solve/:1:2","tags":["git","dev_ops"],"title":"Git 克隆非常慢问题的解决","uri":"/git-clone-slowly-solve/"},{"categories":["git"],"content":"Hosts 修改 主要是借助 nslookup or dig 获取域名对应的可访问 ip, 然后在 hosts 文件中加上 ip–\u003edomain 的映射，刷新 DNS 缓存便可。 hosts 文件是 Linux 系统中一个负责 IP 地址与域名快速解析的文件,以 ASCII 格式保存在 /etc 目录下,文件名为 hosts (不同的 Linux 版本,这个配置文件也可能不同.比如 Debian 的对应文件是 /etc/hostname) hosts 文件包含了 IP 地址和主机名之间的映射,还包括主机名的别名.在没有域名服务器的情况下,系统上的所有网络程序都通过查询该文件来解析对应于某个主机名的 IP 地址,否则就需要使用 DNS 服务程序来解决.通常可以将常用的域名和 IP 地址映射加入到 hosts 文件中,实现快速方便的访问. nslookup github.global.ssl.fastly.net nslookup github.com # vi /etc/hosts xxx github.global.ssl.fastly.net xx github.com # refresh DNS cache # linux sudo /etc/init.d/networking restart # or nscd -i hosts # arch linux /etc/rc.d/nscd restart ## macos lookupd -flushcache # dscacheutil -flushcache ","date":"2022-02-26","objectID":"/git-clone-slowly-solve/:1:3","tags":["git","dev_ops"],"title":"Git 克隆非常慢问题的解决","uri":"/git-clone-slowly-solve/"}]